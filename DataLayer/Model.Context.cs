//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class heladeriaEntities : DbContext
    {
        public heladeriaEntities()
            : base("name=heladeriaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Caja> Cajas { get; set; }
        public DbSet<Cliente> Clientes { get; set; }
        public DbSet<Empleado> Empleadoes { get; set; }
        public DbSet<INFO> INFOes { get; set; }
        public DbSet<NFC> NFCs { get; set; }
        public DbSet<Oferta> Ofertas { get; set; }
        public DbSet<OfertaPorciento> OfertaPorcientoes { get; set; }
        public DbSet<Orden> Ordens { get; set; }
        public DbSet<Orden_Productos> Orden_Productos { get; set; }
        public DbSet<Producto> Productoes { get; set; }
        public DbSet<RegistroInventario> RegistroInventarios { get; set; }
        public DbSet<RegistroInventario_Productos> RegistroInventario_Productos { get; set; }
        public DbSet<SaborHelado> SaborHeladoes { get; set; }
        public DbSet<Suplidor> Suplidors { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<Turno> Turnoes { get; set; }
        public DbSet<Venta> Ventas { get; set; }
        public DbSet<Venta_Ofertas> Venta_Ofertas { get; set; }
        public DbSet<Venta_Productos> Venta_Productos { get; set; }
    
        public virtual ObjectResult<sp_CajaCerrada_Result> sp_CajaCerrada(Nullable<System.DateTime> fc_Inicia, Nullable<System.DateTime> fc_Termina)
        {
            var fc_IniciaParameter = fc_Inicia.HasValue ?
                new ObjectParameter("fc_Inicia", fc_Inicia) :
                new ObjectParameter("fc_Inicia", typeof(System.DateTime));
    
            var fc_TerminaParameter = fc_Termina.HasValue ?
                new ObjectParameter("fc_Termina", fc_Termina) :
                new ObjectParameter("fc_Termina", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CajaCerrada_Result>("sp_CajaCerrada", fc_IniciaParameter, fc_TerminaParameter);
        }
    
        public virtual int sp_CreateCliente(string nombre, string apellido, string telefono, string correo, string rNC, string calle, string no_casa, string sector, string ciudad, string provincia, ObjectParameter id)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var rNCParameter = rNC != null ?
                new ObjectParameter("RNC", rNC) :
                new ObjectParameter("RNC", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var no_casaParameter = no_casa != null ?
                new ObjectParameter("no_casa", no_casa) :
                new ObjectParameter("no_casa", typeof(string));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("sector", sector) :
                new ObjectParameter("sector", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("provincia", provincia) :
                new ObjectParameter("provincia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateCliente", nombreParameter, apellidoParameter, telefonoParameter, correoParameter, rNCParameter, calleParameter, no_casaParameter, sectorParameter, ciudadParameter, provinciaParameter, id);
        }
    
        public virtual ObjectResult<sp_GetVentas_Result> sp_GetVentas(Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_final)
        {
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finalParameter = fecha_final.HasValue ?
                new ObjectParameter("fecha_final", fecha_final) :
                new ObjectParameter("fecha_final", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetVentas_Result>("sp_GetVentas", fecha_inicioParameter, fecha_finalParameter);
        }
    
        public virtual int sp_InsertSaborHelado(string nombre, string descripcion, Nullable<bool> etiqueta_negra, Nullable<decimal> precio_compra, Nullable<bool> temporal, Nullable<System.DateTime> principio_temporada, Nullable<System.DateTime> fin_temporada)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var etiqueta_negraParameter = etiqueta_negra.HasValue ?
                new ObjectParameter("etiqueta_negra", etiqueta_negra) :
                new ObjectParameter("etiqueta_negra", typeof(bool));
    
            var precio_compraParameter = precio_compra.HasValue ?
                new ObjectParameter("precio_compra", precio_compra) :
                new ObjectParameter("precio_compra", typeof(decimal));
    
            var temporalParameter = temporal.HasValue ?
                new ObjectParameter("temporal", temporal) :
                new ObjectParameter("temporal", typeof(bool));
    
            var principio_temporadaParameter = principio_temporada.HasValue ?
                new ObjectParameter("principio_temporada", principio_temporada) :
                new ObjectParameter("principio_temporada", typeof(System.DateTime));
    
            var fin_temporadaParameter = fin_temporada.HasValue ?
                new ObjectParameter("fin_temporada", fin_temporada) :
                new ObjectParameter("fin_temporada", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertSaborHelado", nombreParameter, descripcionParameter, etiqueta_negraParameter, precio_compraParameter, temporalParameter, principio_temporadaParameter, fin_temporadaParameter);
        }
    
        public virtual int sp_ObetenerNFCParaVenta(Nullable<int> venta_id)
        {
            var venta_idParameter = venta_id.HasValue ?
                new ObjectParameter("venta_id", venta_id) :
                new ObjectParameter("venta_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ObetenerNFCParaVenta", venta_idParameter);
        }
    }
}
